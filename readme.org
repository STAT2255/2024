#+TITLE: STAT 2255: Statistical Programming 

# * Fall 2024 *Syllabus*
<2024-08-26 Mon> - <2024-12-06 Fri>

* Course Information

- Time and Location
  - Time: *TuTh 9:30AM-10:45AM*
	- Location: *AUST 344*

- Instructor: *HaiYing (Ben) Wang*
  - Office Hours: *TuTh 11:00AM - 12:00PM, Aust 319*, or by appointment
  - Email: *haiying.wang@uconn.edu*
  - GitHub: [[https://github.com/Ossifragus][Ossifragus]]

- Grader: Riyanka Bhowal
  - Email: *dvk24005@uconn.edu*

- Notes: will be posted on this [[https://github.com/stat2255/2024][GitHub repo]]: *https://github.com/stat2255/2024*.

  Students should "watch" this repository to receive notifications for any
  updates. It is highly recommended that students "fork" this repository and
  make "pull requests". Course materials such as notes and source code files
  will be posted at this repository. 

- Prerequisite: MATH 1132Q, or instructor consent.

* Course objectives
Introduction to statistical programming via Python including data types, control
flow, object-oriented programming, and graphical user interface-driven
applications such as Jupyter notebooks. Emphasis on algorithmic thinking,
efficient implementation of different data structures, control and data
abstraction, file processing, and data analysis and visualization.

* About Generative AI
Be careful when using generative AI such as ChatGPT, CoPilot, and Gemini. They
can be helpful for checking your code or explaining codes you don't understand,
but they should not be relied upon to generate your code. It's crucial to fully
understand the code you write and be able to code without access to generative
AI.
* Python
An easy way to setup Python is to use [[https://docs.conda.io/en/latest/][conda]] by installing [[https://docs.conda.io/en/latest/miniconda.html][miniconda]] or
[[https://www.anaconda.com/download/][anaconda]]. Here is are some comparisons between the two distribution [[https://conda.io/projects/conda/en/latest/user-guide/install/download.html#anaconda-or-miniconda][anaconda vs
miniconda]].

# If you'd prefer that conda's base environment not be activated on startup,
# set the auto_activate_base parameter to false:
# conda config --set auto_activate_base false

* Grading

| Category                  | Weight |
|---------------------------+--------|
| Homework                  |    30% |
| Midterm                   |    30% |
| Final                     |    40% |
|---------------------------+--------|

* Exams
The midterm exam will be held in class on Thursday, and the final exam will be
held at UConn scheduled date. They are closed book and closed
notes. *No Make-up Exams!* The following is tentative exam schedule.

- Midterm (Tentative): <2024-10-10 Thu>, in class.
- Final: TBA

* Homework:

Unless stated, homework should be submitted through HuskyCT. Homework
submissions *must contains a .pdf file* along with source code in .ipynb, .md,
or .py format.

Late submissions within the 2-day grace period will only be worth 50% - 95%
of the points. Submissions beyond 2 days will not be graded and will receive
no credit. No homework grade will be dropped.

** Generate pdf files
You need [[https://pandoc.org/][pandoc]] and xelatex to export pdf files from jupyter book. 

*** Install pandoc and xelatex

- Download and install pandoc [[https://github.com/jgm/pandoc/releases/latest][here]]. Choose the .pkg version for Mac and the .msi
  version for Windows.
- Download and install [[https://miktex.org/download][MiKTeX]] (better with Windows) or [[https://tug.org/mactex/][MacTeX]] (Mac only).
- You may need to restart your anaconda prompt and/or shell for the two
  newly installed software to work. 
- With MiKTeX the fist time you export a pdf file, you need to wait for a while,
  because it needs to fetch necessary packages online.

*** A temp ad-hoc solution -- print the webpage
Be sure to adjust the width of your browser to make the pdf print look better.

* Material coverage (subject to change)

1. Virtual Environment, Markdown (maybe Git and GitHub) 
2. Object Types and Statements
3. Modules
4. Object-Oriented Programming
5. Testing and Exception Handling
6. Running Time Analysis
7. Root Finding
8. Pandas
9. Data Visualization and Hypothesis Testing
10. Random Variable Generation

* References

1. Devroye, Luc. (2013). Non-Uniform Random Variate Generation. Springer-Verlag.
2. Lutz, Mark. (2013). Learning Python: Powerful Object-Oriented Programming. United States: O'Reilly Media.
3. McKinney, Wes. (2013). [[https://wesmckinney.com/book/python-basics.html][Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython.]] O'Reilly Media. ISBN: 9789351100065. 
4. Sheehy, Donald R. (2022). [[https://donsheehy.github.io/datastructures/fullbook.pdf][A First Course on Data Structures in Python]].
# 5. [[https://github.com/datawhalechina/joyful-pandas][Pandas Practice Dataset]].

** Two quick reference cards
 - [[https://www.cs.put.poznan.pl/csobaniec/software/python/py-qrc.html][Python 3 â€“ Quick Reference Card]]
 - [[https://quickref.me/python.html][Python cheatsheet]]

** Python exercises with sample solutions
 - [[https://www.w3resource.com/python-exercises/][Python Exercises, Practice, Solution]]

** Python Tutor
 - https://pythontutor.com/visualize.html

* Academic Integrity

A fundamental tenet of all educational institutions is academic honesty;
academic work depends upon respect for and acknowledgement of the research and
ideas of others. Misrepresenting someone else's work as one's own is a serious
offense in any academic setting and it will not be condoned. Academic misconduct
includes, but is not limited to, providing or receiving assistance in a manner
not authorized by the instructor in the creation of work to be submitted for
academic evaluation (e.g. papers, projects, and examinations); any attempt to
influence improperly (e.g. bribery, threats) any member of the faculty, staff,
or administration of the University in any matter pertaining to academics or
research; presenting, as one's own,the ideas or words of another for academic
evaluation; doing unauthorized academic work for which another person will
receive credit or be evaluated; and presenting the same or substantially the
same papers or projects in two or more courses without the explicit permission
of the instructors involved. A student who knowingly assists another student in
committing an act of academic misconduct shall be equally accountable for the
violation, and shall be subject to the sanctions and other remedies described in
The Student Code.

* Support Services

- [[http://www.cmhs.uconn.edu/][Counseling and Mental Health Services]] 486-4705 (after hours, use 486-3427)
- [[http://www.career.uconn.edu/][Career Services]] 486-3013
- [[http://www.aod.uconn.edu/][Alcohol and Other Drug Services]] 486-9431
- [[http://www.dos.uconn.edu/][Dean of Students Office]] 486-3426
- [[http://www.csd.uconn.edu/][Center for Students with Disabilities]] 486-2020 (voice), 486-2077 (TDD)
- Online Course Support: [[https://achieve.uconn.edu/online-course/]]
- Keep Learning: [[https://onlinestudent.uconn.edu/keeplearning/]]

* Disclaimer

The instructor reserves the right to make changes to the syllabus as
necessitated by circumstances.

#+startup: show3levels hideblocks
#+options: h:4 timestamp:nil date:nil tasks tex:t num:t toc:nil
#+options: author:nil creator:nil html-postamble:nil HTML_DOCTYPE:HTML5
#+EXPORT_FILE_NAME: syllabus
#+HTML_HEAD: <base target="_blank">
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://ossifragus.github.io/style/github-pandoc.css"/>
#+LaTeX_CLASS: article
#+LATEX_CLASS_OPTIONS: [12pt, hidelinks]
#+latex_header: \usepackage[margin=1in]{geometry}

